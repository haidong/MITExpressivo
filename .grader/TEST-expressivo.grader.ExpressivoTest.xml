<?xml version="1.0" encoding="UTF-8" ?>
<testsuite errors="4" failures="29" hostname="haidong-ryzen" name="expressivo.grader.ExpressivoTest" skipped="0" tests="152" time="1.039" timestamp="2017-04-07T02:32:27">
  <properties>
    <property name="java.vendor" value="Oracle Corporation" />
    <property name="sun.java.launcher" value="SUN_STANDARD" />
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers" />
    <property name="build.sysclasspath" value="ignore" />
    <property name="os.name" value="Linux" />
    <property name="sun.boot.class.path" value="/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jfr.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/classes" />
    <property name="sun.desktop" value="gnome" />
    <property name="final.grading" value="true" />
    <property name="java.vm.specification.vendor" value="Oracle Corporation" />
    <property name="ant.home" value="/home/haidong/.p2/pool/plugins/org.apache.ant_1.9.6.v201510161327" />
    <property name="java.runtime.version" value="1.8.0_121-8u121-b13-0ubuntu1.16.04.2-b13" />
    <property name="user.name" value="haidong" />
    <property name="ant.build.javac.target" value="1.8" />
    <property name="user.language" value="en" />
    <property name="sun.boot.library.path" value="/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/amd64" />
    <property name="grader.report.file" value="my-grader-report.xml" />
    <property name="ant.project.default-target" value="all" />
    <property name="java.version" value="1.8.0_121" />
    <property name="user.timezone" value="" />
    <property name="sun.arch.data.model" value="64" />
    <property name="java.endorsed.dirs" value="/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/endorsed" />
    <property name="sun.cpu.isalist" value="" />
    <property name="sun.jnu.encoding" value="UTF-8" />
    <property name="file.encoding.pkg" value="sun.io" />
    <property name="file.separator" value="/" />
    <property name="java.specification.name" value="Java Platform API Specification" />
    <property name="java.class.version" value="52.0" />
    <property name="user.country" value="US" />
    <property name="java.home" value="/usr/lib/jvm/java-8-openjdk-amd64/jre" />
    <property name="java.vm.info" value="mixed mode" />
    <property name="ant.file" value="/home/haidong/workspace/ps1-expressivo/grader.xml" />
    <property name="os.version" value="4.10.1-041001-generic" />
    <property name="final.grader.jar" value="ps1-final-grader.jar" />
    <property name="path.separator" value=":" />
    <property name="java.vm.version" value="25.121-b13" />
    <property name="ant.library.dir" value="/home/haidong/.p2/pool/plugins/org.apache.ant_1.9.6.v201510161327/lib" />
    <property name="java.awt.printerjob" value="sun.print.PSPrinterJob" />
    <property name="sun.io.unicode.encoding" value="UnicodeLittle" />
    <property name="awt.toolkit" value="sun.awt.X11.XToolkit" />
    <property name="user.home" value="/home/haidong" />
    <property name="java.specification.vendor" value="Oracle Corporation" />
    <property name="which.tests.ran" value="BETA + FINAL" />
    <property name="java.library.path" value="/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib" />
    <property name="java.vendor.url" value="http://java.oracle.com/" />
    <property name="java.vm.vendor" value="Oracle Corporation" />
    <property name="java.runtime.name" value="OpenJDK Runtime Environment" />
    <property name="beta.grader.jar" value="ps1-beta-grader.jar" />
    <property name="sun.java.command" value="org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner expressivo.grader.ExpressivoTest skipNonTests=false filtertrace=true haltOnError=false haltOnFailure=false showoutput=false outputtoformatters=true logfailedtests=true threadid=0 logtestlistenerevents=false formatter=org.apache.tools.ant.taskdefs.optional.junit.XMLJUnitResultFormatter,/home/haidong/workspace/ps1-expressivo/.grader/TEST-expressivo.grader.ExpressivoTest.xml crashfile=/home/haidong/workspace/ps1-expressivo/.grader/junitvmwatcher8806131169212579186.properties propsfile=/home/haidong/workspace/ps1-expressivo/.grader/junit3581530609202741298.properties" />
    <property name="java.class.path" value="/home/haidong/workspace/ps1-expressivo/lib/junit-4.12.jar:/home/haidong/workspace/ps1-expressivo/lib/hamcrest-core-1.3.jar:/home/haidong/workspace/ps1-expressivo/lib/parserlib.jar:/home/haidong/workspace/ps1-expressivo/.grader/bin-tests-final:/home/haidong/workspace/ps1-expressivo/.grader/bin-student:/home/haidong/.p2/pool/plugins/org.apache.ant_1.9.6.v201510161327/lib/ant-launcher.jar:/home/haidong/.p2/pool/plugins/org.apache.ant_1.9.6.v201510161327/lib/ant.jar:/home/haidong/.p2/pool/plugins/org.apache.ant_1.9.6.v201510161327/lib/ant-junit.jar:/home/haidong/.p2/pool/plugins/org.apache.ant_1.9.6.v201510161327/lib/ant-junit4.jar" />
    <property name="ant.version" value="Apache Ant(TM) version 1.9.6 compiled on June 29 2015" />
    <property name="project.name" value="ps1-expressivo" />
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification" />
    <property name="java.vm.specification.version" value="1.8" />
    <property name="sun.cpu.endian" value="little" />
    <property name="didit.desc" value="Running our tests against your implementation" />
    <property name="sun.os.patch.level" value="unknown" />
    <property name="java.io.tmpdir" value="/tmp" />
    <property name="java.vendor.url.bug" value="http://bugreport.sun.com/bugreport/" />
    <property name="os.arch" value="amd64" />
    <property name="java.awt.graphicsenv" value="sun.awt.X11GraphicsEnvironment" />
    <property name="java.ext.dirs" value="/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext" />
    <property name="user.dir" value="/home/haidong/workspace/ps1-expressivo" />
    <property name="line.separator" value="&#xa;" />
    <property name="zipfile" value="my-submission.zip" />
    <property name="java.vm.name" value="OpenJDK 64-Bit Server VM" />
    <property name="problem.set" value="ps1" />
    <property name="basedir" value="/home/haidong/workspace/ps1-expressivo" />
    <property name="ant.java.version" value="1.8" />
    <property name="ant.core.lib" value="/home/haidong/.p2/pool/plugins/org.apache.ant_1.9.6.v201510161327/lib/ant.jar" />
    <property name="file.encoding" value="UTF-8" />
    <property name="java.specification.version" value="1.8" />
    <property name="grader.dir" value=".grader" />
    <property name="ant.project.invoked-targets" value="all" />
  </properties>
  <testcase classname="expressivo.grader.ExpressivoTest" name="testDifferentiate_dx[zero]" time="0.085" />
  <testcase classname="expressivo.grader.ExpressivoTest" name="testDifferentiate_dy[zero]" time="0.01" />
  <testcase classname="expressivo.grader.ExpressivoTest" name="testParse[zero]" time="0.011" />
  <testcase classname="expressivo.grader.ExpressivoTest" name="testSimplify_xyz[zero]" time="0.012" />
  <testcase classname="expressivo.grader.ExpressivoTest" name="testDifferentiate_dx[nonzero integer]" time="0.009" />
  <testcase classname="expressivo.grader.ExpressivoTest" name="testDifferentiate_dy[nonzero integer]" time="0.01" />
  <testcase classname="expressivo.grader.ExpressivoTest" name="testParse[nonzero integer]" time="0.01" />
  <testcase classname="expressivo.grader.ExpressivoTest" name="testSimplify_xyz[nonzero integer]" time="0.008" />
  <testcase classname="expressivo.grader.ExpressivoTest" name="testDifferentiate_dx[decimal-fraction &lt; 1]" time="0.006" />
  <testcase classname="expressivo.grader.ExpressivoTest" name="testDifferentiate_dy[decimal-fraction &lt; 1]" time="0.006" />
  <testcase classname="expressivo.grader.ExpressivoTest" name="testParse[decimal-fraction &lt; 1]" time="0.006" />
  <testcase classname="expressivo.grader.ExpressivoTest" name="testSimplify_xyz[decimal-fraction &lt; 1]" time="0.005" />
  <testcase classname="expressivo.grader.ExpressivoTest" name="testDifferentiate_dx[decimal-fraction &gt; 1]" time="0.006" />
  <testcase classname="expressivo.grader.ExpressivoTest" name="testDifferentiate_dy[decimal-fraction &gt; 1]" time="0.01" />
  <testcase classname="expressivo.grader.ExpressivoTest" name="testParse[decimal-fraction &gt; 1]" time="0.005" />
  <testcase classname="expressivo.grader.ExpressivoTest" name="testSimplify_xyz[decimal-fraction &gt; 1]" time="0.004" />
  <testcase classname="expressivo.grader.ExpressivoTest" name="testDifferentiate_dx[trailing zeros]" time="0.006" />
  <testcase classname="expressivo.grader.ExpressivoTest" name="testDifferentiate_dy[trailing zeros]" time="0.006" />
  <testcase classname="expressivo.grader.ExpressivoTest" name="testParse[trailing zeros]" time="0.005" />
  <testcase classname="expressivo.grader.ExpressivoTest" name="testSimplify_xyz[trailing zeros]" time="0.004" />
  <testcase classname="expressivo.grader.ExpressivoTest" name="testDifferentiate_dx[no leading zero]" time="0.006" />
  <testcase classname="expressivo.grader.ExpressivoTest" name="testDifferentiate_dy[no leading zero]" time="0.005" />
  <testcase classname="expressivo.grader.ExpressivoTest" name="testParse[no leading zero]" time="0.004" />
  <testcase classname="expressivo.grader.ExpressivoTest" name="testSimplify_xyz[no leading zero]" time="0.005" />
  <testcase classname="expressivo.grader.ExpressivoTest" name="testDifferentiate_dx[decimal-fraction very small]" time="0.004" />
  <testcase classname="expressivo.grader.ExpressivoTest" name="testDifferentiate_dy[decimal-fraction very small]" time="0.003" />
  <testcase classname="expressivo.grader.ExpressivoTest" name="testParse[decimal-fraction very small]" time="0.007">
    <error message="invalid Expression.toString (staff parser could not parse)" type="java.lang.RuntimeException">java.lang.RuntimeException: invalid Expression.toString (staff parser could not parse)
	at expressivo.grader.ExpressivoTest.testParse(ExpressivoTest.java:100)
Caused by: expressivo.staff.SyntaxError: Character 3: expected end_of_input, got E in expression &quot;1.0E-6&quot;
	at expressivo.staff.Parser.parse(Parser.java:23)
	at expressivo.staff.Parser.parse(Parser.java:13)
	at expressivo.grader.ExpressivoTest.testParse(ExpressivoTest.java:98)
Caused by: expressivo.staff.SyntaxError: Character 3: expected end_of_input, got E
	at expressivo.staff.Parser.eat(Parser.java:129)
	at expressivo.staff.Parser.parse(Parser.java:48)
	at expressivo.staff.Parser.parse(Parser.java:21)
</error>
  </testcase>
  <testcase classname="expressivo.grader.ExpressivoTest" name="testSimplify_xyz[decimal-fraction very small]" time="0.004">
    <error message="invalid simplified expression (staff parser could not parse)" type="java.lang.RuntimeException">java.lang.RuntimeException: invalid simplified expression (staff parser could not parse)
	at expressivo.grader.ExpressivoTest.testSimplify_xyz(ExpressivoTest.java:159)
Caused by: expressivo.staff.SyntaxError: Character 3: expected end_of_input, got E in expression &quot;1.0E-6&quot;
	at expressivo.staff.Parser.parse(Parser.java:23)
	at expressivo.staff.Parser.parse(Parser.java:13)
	at expressivo.grader.ExpressivoTest.testSimplify_xyz(ExpressivoTest.java:157)
Caused by: expressivo.staff.SyntaxError: Character 3: expected end_of_input, got E
	at expressivo.staff.Parser.eat(Parser.java:129)
	at expressivo.staff.Parser.parse(Parser.java:48)
	at expressivo.staff.Parser.parse(Parser.java:21)
</error>
  </testcase>
  <testcase classname="expressivo.grader.ExpressivoTest" name="testDifferentiate_dx[integer very large]" time="0.021" />
  <testcase classname="expressivo.grader.ExpressivoTest" name="testDifferentiate_dy[integer very large]" time="0.005" />
  <testcase classname="expressivo.grader.ExpressivoTest" name="testParse[integer very large]" time="0.005">
    <error message="invalid Expression.toString (staff parser could not parse)" type="java.lang.RuntimeException">java.lang.RuntimeException: invalid Expression.toString (staff parser could not parse)
	at expressivo.grader.ExpressivoTest.testParse(ExpressivoTest.java:100)
Caused by: expressivo.staff.SyntaxError: Character 17: expected end_of_input, got E in expression &quot;9.007199254740992E15&quot;
	at expressivo.staff.Parser.parse(Parser.java:23)
	at expressivo.staff.Parser.parse(Parser.java:13)
	at expressivo.grader.ExpressivoTest.testParse(ExpressivoTest.java:98)
Caused by: expressivo.staff.SyntaxError: Character 17: expected end_of_input, got E
	at expressivo.staff.Parser.eat(Parser.java:129)
	at expressivo.staff.Parser.parse(Parser.java:48)
	at expressivo.staff.Parser.parse(Parser.java:21)
</error>
  </testcase>
  <testcase classname="expressivo.grader.ExpressivoTest" name="testSimplify_xyz[integer very large]" time="0.005">
    <error message="invalid simplified expression (staff parser could not parse)" type="java.lang.RuntimeException">java.lang.RuntimeException: invalid simplified expression (staff parser could not parse)
	at expressivo.grader.ExpressivoTest.testSimplify_xyz(ExpressivoTest.java:159)
Caused by: expressivo.staff.SyntaxError: Character 17: expected end_of_input, got E in expression &quot;9.007199254740992E15&quot;
	at expressivo.staff.Parser.parse(Parser.java:23)
	at expressivo.staff.Parser.parse(Parser.java:13)
	at expressivo.grader.ExpressivoTest.testSimplify_xyz(ExpressivoTest.java:157)
Caused by: expressivo.staff.SyntaxError: Character 17: expected end_of_input, got E
	at expressivo.staff.Parser.eat(Parser.java:129)
	at expressivo.staff.Parser.parse(Parser.java:48)
	at expressivo.staff.Parser.parse(Parser.java:21)
</error>
  </testcase>
  <testcase classname="expressivo.grader.ExpressivoTest" name="testDifferentiate_dx[x]" time="0.005" />
  <testcase classname="expressivo.grader.ExpressivoTest" name="testDifferentiate_dy[x]" time="0.004" />
  <testcase classname="expressivo.grader.ExpressivoTest" name="testParse[x]" time="0.004" />
  <testcase classname="expressivo.grader.ExpressivoTest" name="testSimplify_xyz[x]" time="0.005" />
  <testcase classname="expressivo.grader.ExpressivoTest" name="testDifferentiate_dx[y]" time="0.004" />
  <testcase classname="expressivo.grader.ExpressivoTest" name="testDifferentiate_dy[y]" time="0.004" />
  <testcase classname="expressivo.grader.ExpressivoTest" name="testParse[y]" time="0.003" />
  <testcase classname="expressivo.grader.ExpressivoTest" name="testSimplify_xyz[y]" time="0.003" />
  <testcase classname="expressivo.grader.ExpressivoTest" name="testDifferentiate_dx[other variable]" time="0.003" />
  <testcase classname="expressivo.grader.ExpressivoTest" name="testDifferentiate_dy[other variable]" time="0.003" />
  <testcase classname="expressivo.grader.ExpressivoTest" name="testParse[other variable]" time="0.004" />
  <testcase classname="expressivo.grader.ExpressivoTest" name="testSimplify_xyz[other variable]" time="0.01" />
  <testcase classname="expressivo.grader.ExpressivoTest" name="testDifferentiate_dx[variable with parens]" time="0.003" />
  <testcase classname="expressivo.grader.ExpressivoTest" name="testDifferentiate_dy[variable with parens]" time="0.003" />
  <testcase classname="expressivo.grader.ExpressivoTest" name="testParse[variable with parens]" time="0.003" />
  <testcase classname="expressivo.grader.ExpressivoTest" name="testSimplify_xyz[variable with parens]" time="0.004" />
  <testcase classname="expressivo.grader.ExpressivoTest" name="testDifferentiate_dx[variable with extra parens]" time="0.004" />
  <testcase classname="expressivo.grader.ExpressivoTest" name="testDifferentiate_dy[variable with extra parens]" time="0.004" />
  <testcase classname="expressivo.grader.ExpressivoTest" name="testParse[variable with extra parens]" time="0.005" />
  <testcase classname="expressivo.grader.ExpressivoTest" name="testSimplify_xyz[variable with extra parens]" time="0.005" />
  <testcase classname="expressivo.grader.ExpressivoTest" name="testDifferentiate_dx[add]" time="0.004" />
  <testcase classname="expressivo.grader.ExpressivoTest" name="testDifferentiate_dy[add]" time="0.004" />
  <testcase classname="expressivo.grader.ExpressivoTest" name="testParse[add]" time="0.004" />
  <testcase classname="expressivo.grader.ExpressivoTest" name="testSimplify_xyz[add]" time="0.004" />
  <testcase classname="expressivo.grader.ExpressivoTest" name="testDifferentiate_dx[add with extra parens]" time="0.014" />
  <testcase classname="expressivo.grader.ExpressivoTest" name="testDifferentiate_dy[add with extra parens]" time="0.008" />
  <testcase classname="expressivo.grader.ExpressivoTest" name="testParse[add with extra parens]" time="0.008" />
  <testcase classname="expressivo.grader.ExpressivoTest" name="testSimplify_xyz[add with extra parens]" time="0.008" />
  <testcase classname="expressivo.grader.ExpressivoTest" name="testDifferentiate_dx[times]" time="0.005" />
  <testcase classname="expressivo.grader.ExpressivoTest" name="testDifferentiate_dy[times]" time="0.004" />
  <testcase classname="expressivo.grader.ExpressivoTest" name="testParse[times]" time="0.005" />
  <testcase classname="expressivo.grader.ExpressivoTest" name="testSimplify_xyz[times]" time="0.004" />
  <testcase classname="expressivo.grader.ExpressivoTest" name="testDifferentiate_dx[times with extra parens]" time="0.008" />
  <testcase classname="expressivo.grader.ExpressivoTest" name="testDifferentiate_dy[times with extra parens]" time="0.009" />
  <testcase classname="expressivo.grader.ExpressivoTest" name="testParse[times with extra parens]" time="0.01" />
  <testcase classname="expressivo.grader.ExpressivoTest" name="testSimplify_xyz[times with extra parens]" time="0.01" />
  <testcase classname="expressivo.grader.ExpressivoTest" name="testDifferentiate_dx[* ( * )]" time="0.005">
    <failure message="(after converting to canonical form) expected:&lt;3.0*x*x&gt; but was:&lt;x + 2.0*x*x&gt;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: (after converting to canonical form) expected:&lt;3.0*x*x&gt; but was:&lt;x + 2.0*x*x&gt;
	at expressivo.grader.ExpressivoTest.testDifferentiate_dx(ExpressivoTest.java:120)
</failure>
  </testcase>
  <testcase classname="expressivo.grader.ExpressivoTest" name="testDifferentiate_dy[* ( * )]" time="0.004" />
  <testcase classname="expressivo.grader.ExpressivoTest" name="testParse[* ( * )]" time="0.005" />
  <testcase classname="expressivo.grader.ExpressivoTest" name="testSimplify_xyz[* ( * )]" time="0.005" />
  <testcase classname="expressivo.grader.ExpressivoTest" name="testDifferentiate_dx[( * ) *]" time="0.006">
    <failure message="(after converting to canonical form) expected:&lt;3.0*x*x&gt; but was:&lt;x + 2.0*x*x&gt;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: (after converting to canonical form) expected:&lt;3.0*x*x&gt; but was:&lt;x + 2.0*x*x&gt;
	at expressivo.grader.ExpressivoTest.testDifferentiate_dx(ExpressivoTest.java:120)
</failure>
  </testcase>
  <testcase classname="expressivo.grader.ExpressivoTest" name="testDifferentiate_dy[( * ) *]" time="0.005" />
  <testcase classname="expressivo.grader.ExpressivoTest" name="testParse[( * ) *]" time="0.005" />
  <testcase classname="expressivo.grader.ExpressivoTest" name="testSimplify_xyz[( * ) *]" time="0.006" />
  <testcase classname="expressivo.grader.ExpressivoTest" name="testDifferentiate_dx[( * ) * ( * )]" time="0.006">
    <failure message="(after converting to canonical form) expected:&lt;2.0*x*y*y&gt; but was:&lt;x + x*y*y&gt;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: (after converting to canonical form) expected:&lt;2.0*x*y*y&gt; but was:&lt;x + x*y*y&gt;
	at expressivo.grader.ExpressivoTest.testDifferentiate_dx(ExpressivoTest.java:120)
</failure>
  </testcase>
  <testcase classname="expressivo.grader.ExpressivoTest" name="testDifferentiate_dy[( * ) * ( * )]" time="0.006">
    <failure message="(after converting to canonical form) expected:&lt;2.0*x*x*y&gt; but was:&lt;x*x*y + y&gt;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: (after converting to canonical form) expected:&lt;2.0*x*x*y&gt; but was:&lt;x*x*y + y&gt;
	at expressivo.grader.ExpressivoTest.testDifferentiate_dy(ExpressivoTest.java:138)
</failure>
  </testcase>
  <testcase classname="expressivo.grader.ExpressivoTest" name="testParse[( * ) * ( * )]" time="0.006" />
  <testcase classname="expressivo.grader.ExpressivoTest" name="testSimplify_xyz[( * ) * ( * )]" time="0.01" />
  <testcase classname="expressivo.grader.ExpressivoTest" name="testDifferentiate_dx[* * * * *]" time="0.005">
    <failure message="(after converting to canonical form) expected:&lt;3.0*x*x*y*y*z*z&gt; but was:&lt;x + x*x*y*y*z*z + x*y&gt;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: (after converting to canonical form) expected:&lt;3.0*x*x*y*y*z*z&gt; but was:&lt;x + x*x*y*y*z*z + x*y&gt;
	at expressivo.grader.ExpressivoTest.testDifferentiate_dx(ExpressivoTest.java:120)
</failure>
  </testcase>
  <testcase classname="expressivo.grader.ExpressivoTest" name="testDifferentiate_dy[* * * * *]" time="0.005">
    <failure message="(after converting to canonical form) expected:&lt;2.0*x*x*x*y*z*z&gt; but was:&lt;x*x*y + x*x*y*z&gt;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: (after converting to canonical form) expected:&lt;2.0*x*x*x*y*z*z&gt; but was:&lt;x*x*y + x*x*y*z&gt;
	at expressivo.grader.ExpressivoTest.testDifferentiate_dy(ExpressivoTest.java:138)
</failure>
  </testcase>
  <testcase classname="expressivo.grader.ExpressivoTest" name="testParse[* * * * *]" time="0.003" />
  <testcase classname="expressivo.grader.ExpressivoTest" name="testSimplify_xyz[* * * * *]" time="0.004" />
  <testcase classname="expressivo.grader.ExpressivoTest" name="testDifferentiate_dx[integers add]" time="0.004" />
  <testcase classname="expressivo.grader.ExpressivoTest" name="testDifferentiate_dy[integers add]" time="0.005">
    <failure message="(after converting to canonical form) expected:&lt;0.000000&gt; but was:&lt;80.000000&gt;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: (after converting to canonical form) expected:&lt;0.000000&gt; but was:&lt;80.000000&gt;
	at expressivo.grader.ExpressivoTest.testDifferentiate_dy(ExpressivoTest.java:138)
</failure>
  </testcase>
  <testcase classname="expressivo.grader.ExpressivoTest" name="testParse[integers add]" time="0.004">
    <failure message="(after converting to canonical form) expected:&lt;154.0*x&gt; but was:&lt;80.0 + 74.0*x&gt;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: (after converting to canonical form) expected:&lt;154.0*x&gt; but was:&lt;80.0 + 74.0*x&gt;
	at expressivo.grader.ExpressivoTest.testParse(ExpressivoTest.java:102)
</failure>
  </testcase>
  <testcase classname="expressivo.grader.ExpressivoTest" name="testSimplify_xyz[integers add]" time="0.004" />
  <testcase classname="expressivo.grader.ExpressivoTest" name="testDifferentiate_dx[integers times]" time="0.003" />
  <testcase classname="expressivo.grader.ExpressivoTest" name="testDifferentiate_dy[integers times]" time="0.003" />
  <testcase classname="expressivo.grader.ExpressivoTest" name="testParse[integers times]" time="0.004" />
  <testcase classname="expressivo.grader.ExpressivoTest" name="testSimplify_xyz[integers times]" time="0.003" />
  <testcase classname="expressivo.grader.ExpressivoTest" name="testDifferentiate_dx[integers with various ops]" time="0.0" />
  <testcase classname="expressivo.grader.ExpressivoTest" name="testDifferentiate_dy[integers with various ops]" time="0.0" />
  <testcase classname="expressivo.grader.ExpressivoTest" name="testParse[integers with various ops]" time="0.004">
    <failure message="(after converting to canonical form) expected:&lt;79755.0*x&gt; but was:&lt;28165.0 + 30.0*x&gt;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: (after converting to canonical form) expected:&lt;79755.0*x&gt; but was:&lt;28165.0 + 30.0*x&gt;
	at expressivo.grader.ExpressivoTest.testParse(ExpressivoTest.java:102)
</failure>
  </testcase>
  <testcase classname="expressivo.grader.ExpressivoTest" name="testSimplify_xyz[integers with various ops]" time="0.005" />
  <testcase classname="expressivo.grader.ExpressivoTest" name="testDifferentiate_dx[decimal-fractions add]" time="0.003" />
  <testcase classname="expressivo.grader.ExpressivoTest" name="testDifferentiate_dy[decimal-fractions add]" time="0.003">
    <failure message="(after converting to canonical form) expected:&lt;0.000000&gt; but was:&lt;101.740000&gt;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: (after converting to canonical form) expected:&lt;0.000000&gt; but was:&lt;101.740000&gt;
	at expressivo.grader.ExpressivoTest.testDifferentiate_dy(ExpressivoTest.java:138)
</failure>
  </testcase>
  <testcase classname="expressivo.grader.ExpressivoTest" name="testParse[decimal-fractions add]" time="0.004">
    <failure message="(after converting to canonical form) expected:&lt;184.14*x&gt; but was:&lt;101.74 + 82.4*x&gt;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: (after converting to canonical form) expected:&lt;184.14*x&gt; but was:&lt;101.74 + 82.4*x&gt;
	at expressivo.grader.ExpressivoTest.testParse(ExpressivoTest.java:102)
</failure>
  </testcase>
  <testcase classname="expressivo.grader.ExpressivoTest" name="testSimplify_xyz[decimal-fractions add]" time="0.004" />
  <testcase classname="expressivo.grader.ExpressivoTest" name="testDifferentiate_dx[decimal-fractions times]" time="0.004" />
  <testcase classname="expressivo.grader.ExpressivoTest" name="testDifferentiate_dy[decimal-fractions times]" time="0.003" />
  <testcase classname="expressivo.grader.ExpressivoTest" name="testParse[decimal-fractions times]" time="0.004" />
  <testcase classname="expressivo.grader.ExpressivoTest" name="testSimplify_xyz[decimal-fractions times]" time="0.004" />
  <testcase classname="expressivo.grader.ExpressivoTest" name="testDifferentiate_dx[decimal-fractions with various ops]" time="0.003" />
  <testcase classname="expressivo.grader.ExpressivoTest" name="testDifferentiate_dy[decimal-fractions with various ops]" time="0.005">
    <failure message="(after converting to canonical form) expected:&lt;0.000000&gt; but was:&lt;894.170000&gt;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: (after converting to canonical form) expected:&lt;0.000000&gt; but was:&lt;894.170000&gt;
	at expressivo.grader.ExpressivoTest.testDifferentiate_dy(ExpressivoTest.java:138)
</failure>
  </testcase>
  <testcase classname="expressivo.grader.ExpressivoTest" name="testParse[decimal-fractions with various ops]" time="0.006">
    <failure message="(after converting to canonical form) expected:&lt;977.1808*x&gt; but was:&lt;894.1708 + 83.01*x&gt;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: (after converting to canonical form) expected:&lt;977.1808*x&gt; but was:&lt;894.1708 + 83.01*x&gt;
	at expressivo.grader.ExpressivoTest.testParse(ExpressivoTest.java:102)
</failure>
  </testcase>
  <testcase classname="expressivo.grader.ExpressivoTest" name="testSimplify_xyz[decimal-fractions with various ops]" time="0.006" />
  <testcase classname="expressivo.grader.ExpressivoTest" name="testDifferentiate_dx[decimal-fractions integers add]" time="0.016" />
  <testcase classname="expressivo.grader.ExpressivoTest" name="testDifferentiate_dy[decimal-fractions integers add]" time="0.004">
    <failure message="(after converting to canonical form) expected:&lt;0.000000&gt; but was:&lt;42.000000&gt;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: (after converting to canonical form) expected:&lt;0.000000&gt; but was:&lt;42.000000&gt;
	at expressivo.grader.ExpressivoTest.testDifferentiate_dy(ExpressivoTest.java:138)
</failure>
  </testcase>
  <testcase classname="expressivo.grader.ExpressivoTest" name="testParse[decimal-fractions integers add]" time="0.004">
    <failure message="(after converting to canonical form) expected:&lt;115.997*x&gt; but was:&lt;41.997 + 74.0*x&gt;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: (after converting to canonical form) expected:&lt;115.997*x&gt; but was:&lt;41.997 + 74.0*x&gt;
	at expressivo.grader.ExpressivoTest.testParse(ExpressivoTest.java:102)
</failure>
  </testcase>
  <testcase classname="expressivo.grader.ExpressivoTest" name="testSimplify_xyz[decimal-fractions integers add]" time="0.004" />
  <testcase classname="expressivo.grader.ExpressivoTest" name="testDifferentiate_dx[decimal-fractions integers times]" time="0.004" />
  <testcase classname="expressivo.grader.ExpressivoTest" name="testDifferentiate_dy[decimal-fractions integers times]" time="0.003" />
  <testcase classname="expressivo.grader.ExpressivoTest" name="testParse[decimal-fractions integers times]" time="0.004" />
  <testcase classname="expressivo.grader.ExpressivoTest" name="testSimplify_xyz[decimal-fractions integers times]" time="0.004" />
  <testcase classname="expressivo.grader.ExpressivoTest" name="testDifferentiate_dx[decimal-fractions integers with various ops]" time="0.0" />
  <testcase classname="expressivo.grader.ExpressivoTest" name="testDifferentiate_dy[decimal-fractions integers with various ops]" time="0.001" />
  <testcase classname="expressivo.grader.ExpressivoTest" name="testParse[decimal-fractions integers with various ops]" time="0.004">
    <failure message="(after converting to canonical form) expected:&lt;1382683.824*x&gt; but was:&lt;1030.72 + 30.0*x&gt;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: (after converting to canonical form) expected:&lt;1382683.824*x&gt; but was:&lt;1030.72 + 30.0*x&gt;
	at expressivo.grader.ExpressivoTest.testParse(ExpressivoTest.java:102)
</failure>
  </testcase>
  <testcase classname="expressivo.grader.ExpressivoTest" name="testSimplify_xyz[decimal-fractions integers with various ops]" time="0.004" />
  <testcase classname="expressivo.grader.ExpressivoTest" name="testDifferentiate_dx[various variable names]" time="0.004">
    <failure message="(after converting to canonical form) expected:&lt;2.0*HeLlOwOrLd*foo*jigglywiggly*x&gt; but was:&lt;HeLlOwOrLd*foo*jigglywiggly*x + foo&gt;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: (after converting to canonical form) expected:&lt;2.0*HeLlOwOrLd*foo*jigglywiggly*x&gt; but was:&lt;HeLlOwOrLd*foo*jigglywiggly*x + foo&gt;
	at expressivo.grader.ExpressivoTest.testDifferentiate_dx(ExpressivoTest.java:120)
</failure>
  </testcase>
  <testcase classname="expressivo.grader.ExpressivoTest" name="testDifferentiate_dy[various variable names]" time="0.003" />
  <testcase classname="expressivo.grader.ExpressivoTest" name="testParse[various variable names]" time="0.003" />
  <testcase classname="expressivo.grader.ExpressivoTest" name="testSimplify_xyz[various variable names]" time="0.003" />
  <testcase classname="expressivo.grader.ExpressivoTest" name="testDifferentiate_dx[nested left]" time="0.0" />
  <testcase classname="expressivo.grader.ExpressivoTest" name="testDifferentiate_dy[nested left]" time="0.0" />
  <testcase classname="expressivo.grader.ExpressivoTest" name="testParse[nested left]" time="0.027">
    <failure message="(after converting to canonical form) expected:&lt;a*c*d*g*x + b*c*d*g*x + e*g*x + f*g*x&gt; but was:&lt;a + b*c*d + e + f*g*x&gt;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: (after converting to canonical form) expected:&lt;a*c*d*g*x + b*c*d*g*x + e*g*x + f*g*x&gt; but was:&lt;a + b*c*d + e + f*g*x&gt;
	at expressivo.grader.ExpressivoTest.testParse(ExpressivoTest.java:102)
</failure>
  </testcase>
  <testcase classname="expressivo.grader.ExpressivoTest" name="testSimplify_xyz[nested left]" time="0.031">
    <failure message="(after converting to canonical form) expected:&lt;2.0*a*c*d*g + 2.0*b*c*d*g + 2.0*e*g + 2.0*f*g&gt; but was:&lt;a + b*c*d + e + 2.0*f*g&gt;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: (after converting to canonical form) expected:&lt;2.0*a*c*d*g + 2.0*b*c*d*g + 2.0*e*g + 2.0*f*g&gt; but was:&lt;a + b*c*d + e + 2.0*f*g&gt;
	at expressivo.grader.ExpressivoTest.testSimplify_xyz(ExpressivoTest.java:162)
</failure>
  </testcase>
  <testcase classname="expressivo.grader.ExpressivoTest" name="testDifferentiate_dx[nested center]" time="0.0" />
  <testcase classname="expressivo.grader.ExpressivoTest" name="testDifferentiate_dy[nested center]" time="0.0" />
  <testcase classname="expressivo.grader.ExpressivoTest" name="testParse[nested center]" time="0.012">
    <failure message="(after converting to canonical form) expected:&lt;a*c*d*f*g + a*c*d*f*x + a*c*e*f*g + a*c*e*f*x + b*c*d*f*g + b*c*d*f*x + b*c*e*f*g + b*c*e*f*x&gt; but was:&lt;a + b*c*d + e*f*g + x&gt;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: (after converting to canonical form) expected:&lt;a*c*d*f*g + a*c*d*f*x + a*c*e*f*g + a*c*e*f*x + b*c*d*f*g + b*c*d*f*x + b*c*e*f*g + b*c*e*f*x&gt; but was:&lt;a + b*c*d + e*f*g + x&gt;
	at expressivo.grader.ExpressivoTest.testParse(ExpressivoTest.java:102)
</failure>
  </testcase>
  <testcase classname="expressivo.grader.ExpressivoTest" name="testSimplify_xyz[nested center]" time="0.013">
    <failure message="(after converting to canonical form) expected:&lt;2.0*a*c*d*f + a*c*d*f*g + 2.0*a*c*e*f + a*c*e*f*g + 2.0*b*c*d*f + b*c*d*f*g + 2.0*b*c*e*f + b*c*e*f*g&gt; but was:&lt;2.0 + a + b*c*d + e*f*g&gt;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: (after converting to canonical form) expected:&lt;2.0*a*c*d*f + a*c*d*f*g + 2.0*a*c*e*f + a*c*e*f*g + 2.0*b*c*d*f + b*c*d*f*g + 2.0*b*c*e*f + b*c*e*f*g&gt; but was:&lt;2.0 + a + b*c*d + e*f*g&gt;
	at expressivo.grader.ExpressivoTest.testSimplify_xyz(ExpressivoTest.java:162)
</failure>
  </testcase>
  <testcase classname="expressivo.grader.ExpressivoTest" name="testDifferentiate_dx[nested right]" time="0.0" />
  <testcase classname="expressivo.grader.ExpressivoTest" name="testDifferentiate_dy[nested right]" time="0.0" />
  <testcase classname="expressivo.grader.ExpressivoTest" name="testParse[nested right]" time="0.014">
    <failure message="(after converting to canonical form) expected:&lt;a*b + a*c*d*e + a*c*d*f*g + a*c*d*f*x&gt; but was:&lt;a*b + c*d*e + f*g + x&gt;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: (after converting to canonical form) expected:&lt;a*b + a*c*d*e + a*c*d*f*g + a*c*d*f*x&gt; but was:&lt;a*b + c*d*e + f*g + x&gt;
	at expressivo.grader.ExpressivoTest.testParse(ExpressivoTest.java:102)
</failure>
  </testcase>
  <testcase classname="expressivo.grader.ExpressivoTest" name="testSimplify_xyz[nested right]" time="0.014">
    <failure message="(after converting to canonical form) expected:&lt;a*b + a*c*d*e + 2.0*a*c*d*f + a*c*d*f*g&gt; but was:&lt;2.0 + a*b + c*d*e + f*g&gt;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: (after converting to canonical form) expected:&lt;a*b + a*c*d*e + 2.0*a*c*d*f + a*c*d*f*g&gt; but was:&lt;2.0 + a*b + c*d*e + f*g&gt;
	at expressivo.grader.ExpressivoTest.testSimplify_xyz(ExpressivoTest.java:162)
</failure>
  </testcase>
  <testcase classname="expressivo.grader.ExpressivoTest" name="testDifferentiate_dx[nested balanced]" time="0.0" />
  <testcase classname="expressivo.grader.ExpressivoTest" name="testDifferentiate_dy[nested balanced]" time="0.0" />
  <testcase classname="expressivo.grader.ExpressivoTest" name="testParse[nested balanced]" time="0.008">
    <failure message="(after converting to canonical form) expected:&lt;a*c*d + b*c*d + e*f*g + e*f*x&gt; but was:&lt;a + b*c*d + e*f*g + x&gt;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: (after converting to canonical form) expected:&lt;a*c*d + b*c*d + e*f*g + e*f*x&gt; but was:&lt;a + b*c*d + e*f*g + x&gt;
	at expressivo.grader.ExpressivoTest.testParse(ExpressivoTest.java:102)
</failure>
  </testcase>
  <testcase classname="expressivo.grader.ExpressivoTest" name="testSimplify_xyz[nested balanced]" time="0.009">
    <failure message="(after converting to canonical form) expected:&lt;a*c*d + b*c*d + 2.0*e*f + e*f*g&gt; but was:&lt;2.0 + a + b*c*d + e*f*g&gt;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: (after converting to canonical form) expected:&lt;a*c*d + b*c*d + 2.0*e*f + e*f*g&gt; but was:&lt;2.0 + a + b*c*d + e*f*g&gt;
	at expressivo.grader.ExpressivoTest.testSimplify_xyz(ExpressivoTest.java:162)
</failure>
  </testcase>
  <testcase classname="expressivo.grader.ExpressivoTest" name="testDifferentiate_dx[polynomial in x/y/z]" time="0.0" />
  <testcase classname="expressivo.grader.ExpressivoTest" name="testDifferentiate_dy[polynomial in x/y/z]" time="0.0" />
  <testcase classname="expressivo.grader.ExpressivoTest" name="testParse[polynomial in x/y/z]" time="0.005">
    <failure message="(after converting to canonical form) expected:&lt;x*x*x + x*x*x*x*y + x*x*x*y*z + x*x*y*y*z + x*y*y*z*z + x*y*z&gt; but was:&lt;x*x*x + x*x*y + y*z + z&gt;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: (after converting to canonical form) expected:&lt;x*x*x + x*x*x*x*y + x*x*x*y*z + x*x*y*y*z + x*y*y*z*z + x*y*z&gt; but was:&lt;x*x*x + x*x*y + y*z + z&gt;
	at expressivo.grader.ExpressivoTest.testParse(ExpressivoTest.java:102)
</failure>
  </testcase>
  <testcase classname="expressivo.grader.ExpressivoTest" name="testSimplify_xyz[polynomial in x/y/z]" time="0.005" />
  <testcase classname="expressivo.grader.ExpressivoTest" name="testDifferentiate_dx[polynomial in x/y/z with extra parens]" time="0.0" />
  <testcase classname="expressivo.grader.ExpressivoTest" name="testDifferentiate_dy[polynomial in x/y/z with extra parens]" time="0.0" />
  <testcase classname="expressivo.grader.ExpressivoTest" name="testParse[polynomial in x/y/z with extra parens]" time="0.012">
    <failure message="(after converting to canonical form) expected:&lt;x*x*x + x*x*x*x*y + x*x*x*y*z + x*x*y*y*z + x*y*y*z*z + x*y*z&gt; but was:&lt;x*x*x + x*x*y + y*z + z&gt;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: (after converting to canonical form) expected:&lt;x*x*x + x*x*x*x*y + x*x*x*y*z + x*x*y*y*z + x*y*y*z*z + x*y*z&gt; but was:&lt;x*x*x + x*x*y + y*z + z&gt;
	at expressivo.grader.ExpressivoTest.testParse(ExpressivoTest.java:102)
</failure>
  </testcase>
  <testcase classname="expressivo.grader.ExpressivoTest" name="testSimplify_xyz[polynomial in x/y/z with extra parens]" time="0.012" />
  <testcase classname="expressivo.grader.ExpressivoTest" name="testDifferentiate_dx[polynomial in x/y/z and various other variables]" time="0.0" />
  <testcase classname="expressivo.grader.ExpressivoTest" name="testDifferentiate_dy[polynomial in x/y/z and various other variables]" time="0.0" />
  <testcase classname="expressivo.grader.ExpressivoTest" name="testParse[polynomial in x/y/z and various other variables]" time="0.018">
    <failure message="(after converting to canonical form) expected:&lt;4.0*JackOfSpades*TiMiThY*jamoozywashere*variable + JackOfSpades*jamoozywashere*timithy + 4.0*JackOfSpades*jamoozywashere*variable*x + 4.0*TiMiThY*timtim*variable*x + timithy*timtim*x + 4.0*timtim*variable*x*x&gt; but was:&lt;JackOfSpades*jamoozywashere + TiMiThY + timithy*timtim*x + 4.0*variable*x&gt;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: (after converting to canonical form) expected:&lt;4.0*JackOfSpades*TiMiThY*jamoozywashere*variable + JackOfSpades*jamoozywashere*timithy + 4.0*JackOfSpades*jamoozywashere*variable*x + 4.0*TiMiThY*timtim*variable*x + timithy*timtim*x + 4.0*timtim*variable*x*x&gt; but was:&lt;JackOfSpades*jamoozywashere + TiMiThY + timithy*timtim*x + 4.0*variable*x&gt;
	at expressivo.grader.ExpressivoTest.testParse(ExpressivoTest.java:102)
</failure>
  </testcase>
  <testcase classname="expressivo.grader.ExpressivoTest" name="testSimplify_xyz[polynomial in x/y/z and various other variables]" time="0.018">
    <failure message="(after converting to canonical form) expected:&lt;4.0*JackOfSpades*TiMiThY*jamoozywashere*variable + JackOfSpades*jamoozywashere*timithy + 8.0*JackOfSpades*jamoozywashere*variable + 8.0*TiMiThY*timtim*variable + 2.0*timithy*timtim + 16.0*timtim*variable&gt; but was:&lt;JackOfSpades*jamoozywashere + TiMiThY + 2.0*timithy*timtim + 8.0*variable&gt;" type="junit.framework.AssertionFailedError">junit.framework.AssertionFailedError: (after converting to canonical form) expected:&lt;4.0*JackOfSpades*TiMiThY*jamoozywashere*variable + JackOfSpades*jamoozywashere*timithy + 8.0*JackOfSpades*jamoozywashere*variable + 8.0*TiMiThY*timtim*variable + 2.0*timithy*timtim + 16.0*timtim*variable&gt; but was:&lt;JackOfSpades*jamoozywashere + TiMiThY + 2.0*timithy*timtim + 8.0*variable&gt;
	at expressivo.grader.ExpressivoTest.testSimplify_xyz(ExpressivoTest.java:162)
</failure>
  </testcase>
  <system-out><![CDATA[]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
